name: Download Workspace and create PR

on:
  workflow_dispatch:
    inputs:
      workspace_id:
        description: "Workspace ID"
        required: true

jobs:
  download-container:
    runs-on: ubuntu-latest
    env:
      ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
      CONTAINER_ID: ${{ secrets.CONTAINER_ID }}
      WORKSPACE_ID: ${{ github.event.inputs.workspace_id }}
      USER_EMAIL: ${{ secrets.USER_EMAIL }}
      USER_NAME: ${{ secrets.USER_NAME }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install dependencies
        run: npm ci

      - name: Set up Google Cloud credentials
        run: echo "$GCP_SA_KEY" > ./gcp-sa-key.json

      - name: Download container
        run: node ./scripts/downloadContainer.js

      - name: Commit and push changes
        run: |
          git config --local user.email "${{ env.USER_EMAIL }}"
          git config --local user.name "${{ env.USER_NAME }}"
          echo "Last run at $(date)" > last_run.txt
          git add last_run.txt tags/tags.json triggers/triggers.json variables/variables.json templates/templates.json workspaces/workspaces.json
          WORKSPACE_NAME=$(jq -r '.workspace[] | select(.workspaceId=="'"${WORKSPACE_ID}"'") | .name' workspaces/workspaces.json)
          WORKSPACE_NAME=${WORKSPACE_NAME// /-} # replace spaces with hyphens
          git fetch origin
          git checkout update-$WORKSPACE_NAME || git checkout -b update-$WORKSPACE_NAME
          git commit -m "Update container data for $WORKSPACE_NAME" -a
          git push origin update-$WORKSPACE_NAME

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Check if Pull Request already exists
        id: check_pr
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          PR_EXISTS=$(gh pr list --base main --search "Update container data for $WORKSPACE_NAME" | wc -l)
          echo "PR_EXISTS=$PR_EXISTS" >> $GITHUB_ENV

      - name: Create Pull Request
        run: |
          if [[ $PR_EXISTS -eq 0 ]]; then
            gh pr create --title "Update container data for $WORKSPACE_NAME" --body "Update container data for $WORKSPACE_NAME" --base main
          else
            echo "Pull request already exists. Skipping creation."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
